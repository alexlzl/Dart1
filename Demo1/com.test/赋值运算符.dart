/**
 * 1	=(简单赋值 )
    将值从右侧操作数分配给左侧操作数

    例如:C = A + B 将A + B的值分配给C

    2	??=
    仅当变量为null时才分配值

    3	+=(加和赋值)
    它将右操作数添加到左操作数并将结果赋给左操作数。

    例如: C += A 等价于 C = C + A

    4	─=(减和赋值)
    它从左操作数中减去右操作数，并将结果赋给左操作数。

    例如: C -= A 等价于 C = C – A

    5	*=(乘和赋值)
    它将右操作数与左操作数相乘，并将结果赋给左操作数。

    例如: C *= A 等价于 C = C * A

    6	/=(除和赋值)
    它将左操作数与右操作数分开，并将结果赋给左操作数。

    注 - 相同的逻辑适用于Bitwise运算符，因此它们将变为«=，»=，»=，»=，| =和^ =。
 */
/**
 *  a+=b : 15
 *  a-=b : -1
 *  a*=b' : 156
 *  a/=b : 12
 *  a%=b : 12
 */
void main() {
  var a = 12;
  var b = 3;

  a += b;
  print("a+=b : ${a}");

  a = 12;
  b = 13;
  a -= b;
  print("a-=b : ${a}");

  a = 12;
  b = 13;
  a *= b;
  print("a*=b' : ${a}");

  a = 12;
  b = 13;
//  a /= b;
  print("a/=b : ${a}");

  a = 12;
  b = 13;
  a %= b;
  print("a%=b : ${a}");
}
